name: Main Branch

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.*"
    branches: ["main"]
  #pull_request:
  #branches: ["main"]
  pull_request_target:
    types: ["opened"]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21"

      - name: Check code formating with "go fmt ./..."
        run: make fmt

      - name: Run tests
        run: make test

      - name: Build
        run: make build

  release:
    needs: test
    if: startsWith(github.ref_name, 'v')
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ github.token }}
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21"

      - name: Set RELEASE_VERSION env var
        run: echo "RELEASE_VERSION=${{ github.ref_name }}" >> $GITHUB_ENV

      - name: Build
        run: make build

      - name: generate release notes
        run: |
          gh api -X post "repos/${{ github.repository }}/releases/generate-notes" \
          -F commitish=${{ env.RELEASE_VERSION }} \
          -F tag_name=${{ env.RELEASE_VERSION }} > tmp-release-notes.json

      - name: debug
        run: cat tmp-release-notes.json

      - name: create release
        run: |
          jq -r .body tmp-release-notes.json > tmp-release-notes.md
          gh release create ${{ env.RELEASE_VERSION }} \
          -t "$(jq -r .name tmp-release-notes.json)" \
          -F tmp-release-notes.md ./smtp2communicator
